name: Publish

on: push

jobs:
  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v1

      - name: Install Node and NPM
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install dependencies
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT}}
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Publish releases
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT}}
          DEBUG: 'electron-builder*'

          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # npm exec electron-builder -- --publish always --win --mac --linux
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            npm exec electron-builder -- --publish always --linux
          elif [ "$RUNNER_OS" == "Windows" ]; then
            npm exec electron-builder -- --publish always --win
          elif [ "$RUNNER_OS" == "macOS" ]; then
            npm exec electron-builder -- --publish always --mac
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
